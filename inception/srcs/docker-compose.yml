version: '3.8'

services:
  nginx:
    image: ${IMG_SV}
    build:
      context: ./${SUBSRCDIR}/${SV}
    container_name: ${CTNR_SV}
    hostname: ${SV}.${DOMAIN}
    init: true
    ports:
      # - "80:80"
      - "443:443"
      # - "9000:9000"
    networks:
      docker-network:
        ipv4_address: ${IP_SV}
      # - front-net
    volumes:
      - wordpress_data:/var/www/html
    environment:
      TZ: ${TZ:-UTC}
    # env_file:
    #   - ${ENV_FILE}
    depends_on:
      wordpress:
        condition: service_healthy
    tty: true
    restart: unless-stopped

  wordpress:
    image: ${IMG_APP}
    build:
      context: ./${SUBSRCDIR}/${APP}
      args:
        WP_DB_HOST: ${DB}.${DOMAIN}
        # WP_DB_NAME: ${WP_DB_NAME}
        # WP_DB_USER: ${WP_DB_USER}
        # WP_DB_PASSWORD: ${WP_DB_PASSWORD}
        WP_HOME: ${DOMAIN}
        # WP_TITLE: ${WP_TITLE}
        # WP_ADMIN_USER: ${WP_ADMIN_USER}
        # WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
        # WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
        # WP_SUB_USER: ${WP_SUB_USER}
        # WP_SUB_PASSWORD: ${WP_SUB_PASSWORD}
        # WP_SUB_EMAIL: ${WP_SUB_EMAIL}
    container_name: ${CTNR_APP}
    hostname: ${APP}.${DOMAIN}
    init: true
    # environment:
    #   DATABASE_URL: mysql://your_database_user:password@mariadb/your_database_name
    # ports:
      # - "9000:9000"
      # - "3389:3389"
    networks:
      docker-network:
        ipv4_address: ${IP_APP}
      # - front-net
      # - backend-net
    volumes:
      - wordpress_data:/var/www/html
      # - type: bind
      #   source: ${DATADIR}/${APP}
      #   target: /var/www/html
        # persistent: true
        # permissions: rw
      # - app-files:/var/www/html:rw
    environment:
      TZ: ${TZ:-UTC}
    env_file:
      - ${ENVFILE}
    depends_on:
      mariadb:
        condition: service_healthy
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "ls -b /var/www/html/* | grep -q .php"]
      timeout: 5s
      interval: 5s
      retries: 10
      # start_period: 3s 
    restart: unless-stopped

  mariadb:
    image: ${IMG_DB}
    build:
      context: ./${SUBSRCDIR}/${DB}
      args:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        WP_DB_HOST: ${DB}.${DOMAIN}
        WP_DB_NAME: ${WP_DB_NAME}
        WP_DB_USER: ${WP_DB_USER}
        WP_DB_PASSWORD: ${WP_DB_PASSWORD}
        # IP_DB: ${IP_DB}
    container_name: ${CTNR_DB}
    hostname: ${DB}.${DOMAIN}
    init: true
    # user: 1000:1000
    # ports:
      # - "3306:3306"
    networks:
      docker-network:
        ipv4_address: ${IP_DB}
      # - backend-net
    volumes:
      - mariadb_data:/var/lib/mysql
      # - type: bind
      #   source: ${DATADIR}/${DB}
      #   target: /var/lib/mysql
        # persistent: true
        # permissions: rw
      # - db-data:/var/lib/mysql:rw
    environment:
      TZ: ${TZ:-UTC}
    #   MYSQL_ROOT_PASSWORD: your_root_password
    #   MYSQL_DATABASE: your_database_name
    #   MYSQL_USER: your_database_user
    #   MYSQL_PASSWORD: your_database_password
    env_file:
      - ${ENVFILE}
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -u $$WP_DB_USER --password=$$WP_DB_PASSWORD -e 'SELECT 1'"]
      timeout: 5s
      interval: 5s
      retries: 10
      # start_period: 3s 
    restart: unless-stopped

networks:
  docker-network:
    # name: ${NW}
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${IP_SUBNET}
  # front-net:
  #   driver: bridge
  # backend-net:
  #   driver: bridge

# volumes:
#   app-files: ${DATADIR}/{APP}
#   db-data: ${DATADIR}/${DB}
  # sv-conf:
volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATADIR}/${APP}
      o: bind
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATADIR}/${DB}
      o: bind
